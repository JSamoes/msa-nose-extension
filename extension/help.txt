private getHtml(url: string) {
        return `
<html>
    <body style="margin: 0px; padding: 0px; overflow: hidden">
        <div style="position: fixed; height: 100%; width: 100%">
            <iframe
            id="iframe"
            src="${url}"
            frameborder="0"
            style="overflow: hidden; height: 100%; width: 100%"
            height="100%"
            width="100%"
            ></iframe>
        </div>
        <script>
            const vscode = acquireVsCodeApi();
            const iframe = document.getElementById('iframe');

            window.addEventListener('message', event => {
                console.log('message on webview.html', event.source == iframe.contentWindow, event.data);
                if(event.source == iframe.contentWindow) {
                    if(event.data.command === 'onProjectLoaded') {
                        onProjectLoaded();
                    } else if(event.data.command === 'onFileLoaded') {
                        onFileLoaded();
                    } else {
                        vscode.postMessage(event.data);
                    }
                } else {
                    sendMessageToIframe(event.data);
                }
            });

            let iframeLoaded = false;
            let iframeQueue = [];
            function sendMessageToIframe(message) {
                if(!iframeLoaded) {
                    console.log('iframe not ready yet, queueing message', message);
                    iframeQueue.push(message);
                } else {
                    iframe.contentWindow.postMessage(message, '*');
                }
            }
            const onProjectLoaded = () => {
                console.log('onProjectLoaded: sending queued messages', iframeQueue);
                iframeLoaded = true;
                iframeQueue.forEach(message => sendMessageToIframe(message));
                iframeQueue = [];
            };
            const onFileLoaded = () => {
                console.log('onFileLoaded: sending queued messages', iframeQueue);
                iframeLoaded = true;
                iframeQueue.forEach(message => sendMessageToIframe(message));
                iframeQueue = [];
            };
        </script>
  </body>
</html>`;
    }